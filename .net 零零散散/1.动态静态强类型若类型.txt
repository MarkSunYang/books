1.编译型语言和解释型语言:
计算机不能直接理解高级语言，只能理解和运行机器语言，所以必须要把高级语言翻译成机器语言，计算机才能运行高级语言所编写的程序。
一个是编译，一个是解释。两种方式只是翻译的时间不同

编译型语言在程序执行之前，有一个单独的编译过程，将程序翻译成机器语言，以后执行这个程序的时候，就不用再进行翻译了。
解释型语言，是在运行的时候将程序翻译成机器语言，所以运行速度相对于编译型语言要慢。
C/C++ 等都是编译型语言，
而Java，C#等都是解释型语言。因为C#和java都是把程序编译成中间语言，并不是直接编译成机器语言
脚本语言是一种解释性的语言：脚本语言不需要编译，可以直接用，由解释器来负责解释。 



2.动态语言和静态语言
1).运行期间做数据检查的语言，动态类型语言编程，永远不要给任何变量指定数据类型。语言在第一次赋值给变量，在内部将数据记录下来

2).编译期间做数据检查的语言，写程序时需要申明所有变量的数据类型，是固定的，使用数据之前，必须声明数据类型

强类型语言和弱类型语言
1). 
是否安全：类型安全
定义：强制数据类型定义语言，一旦一个变量被指定了某个数据类型，如果不经过强制转换，那么它永远就是这个数据类型了 c/c++/java/C#

2).
是否安全：不安全
定义：数据类型可以被忽略的语言，它与强类型定于语言相反，