更详细的介绍输入，输出以及缓冲输入和无缓冲输入的区别
如何通过键盘模拟文件的结尾
如何使用重定向文件相连接
创建更友好的用户界面

单字符IOgetcahr和puthcahr()
getchar和putchar每次只处理一个字符
缓冲区

文件、流和键盘输入
文件是存储器中存储信息的区域。
在编写的c程序就保存在文件中，用编译c程序的程序也保存在文件中，某些程序需要访问指定的文件
当编译储存为demo.c文件的程序，编译器打开该文件，读取内容，当编译器处理完成后，关闭文件
其他程序例如文字处理，不仅要打开，读取和关闭文件，还要把数据写入文件

输入重定向：可以使程序能够使用文件代替键盘作为输入（则可编辑测试用例文本进行输入）
输出重定向：可以使程序能够使用文件代替屏幕作为输出（则可将结果输出到文件）
文件结尾：操作系统需要某种方式来判断每个文件起始和结束的位置，一般有两种方法：一种是检测文件结尾的的一个特殊字符来进行标识，另一种是让操作系统存储文件大小的信息来进行判断

对于这两种不同的方法，C的处理方式是让getchar（）函数在到达文件结尾时返回一个特殊值，而不管操作系统采用哪种方法，赋予该值得名称是EOF(end of file)，其值一般是-1，在stdio.h文件中定义。
我们则可以使用下列程序进行判断是否读入到文件结尾：
while((ch=getchar（）)！=EOF) // 当ch为EOF时停止
当然有时在命令行中我们也需人为制造结尾，也即需要结束程序时，键入：
CTRL+D（Unix）或   
CTRL+Z（DOS）

具体内容：
所有字符包括回车、空格等等一切键盘输入！

重定向标准输入输出：