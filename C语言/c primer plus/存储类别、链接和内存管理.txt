关键字:auto,extern,static,register,const,volatile,restricted,_Thread_local,_Atomic
函数：rand(),srand(),time(),malloc(),calloc(),free()
如何确定变量的作用域(饿空间的范围)和声明周期(它存在多长事件)

1.存储类别 
c语言提供了不同的模型或存储类别(stroage class)在内存中存储数据，
被存储的每个值都占用一定的物理内存，c语言中这样的一块内存称为对象，因为c语言不是面向对象语言
对象可能存储一个或多个值，一个对象可能并未存储实际的值，但是它在存储适当值具有相应的大小

程序需要一种方法访问对象，这可以通过声明变量来完成：
int entity=3;
这个声明创建了一个名为entity的标识符，在这种情况下，可以用来指定特性对象的内容
标识符遵守变量的命名规则，
变量名不是指定对象的唯一途径：如下
int *pt=&entity;
int ranks[10];
pt是一个标识符，他指定了一个存储地址的对象，但是表达式*pt不是标识符，因此她不是一个名称
然而它确实指定了一个对象，在这种情况下，他与entity指定的对象相同，一般而言，这些指定对象的表达式
被称为左值，所以，entity既是标识符也是左值，rank+2*entity 既不是标识符，也不是左值，
但是表达式*(rank+2*entity)是一个左值，因为它的指了特定的内存位置，


2.链接
外部链接，内部链接，无链接
具有块作用域、函数作用域或函数原型作用域的变量都是无链接变量
这意味着这些变量属于定义他们的块，函数或原型私有
具有文件作用域的变量可以是外部链接或内部链接，外部链接变量可以在多文件中使用
内部链接变量只能在一个翻译单元中使用


3.存储期
作用域和链接描述了标识符的可见性，存储期描述了通过这些标识符访问的对象的生命周期
c对象有四种存储期，静态存储期，线程存储期，自动存储期，动态分配存储期
静态存储期：在程序的执行期间一直存在，文件作用域变量具有静态存储期。
线程存储期：线程存储期用于并发程序设计，程序执行可以被分为多个线程，具有线程存储期的对象
从声明到线程结束一直存在，以关键字 ——Thread_local声明一个对象，每个线程都获得该变量的私有备份



内存分配：
在程序运行的时候分配更多的内存，主要的工具撕malloc()函数，该函数接受一个参数
所需要的内存字节数malloc函数找到合适的空闲内存块，这样的内存是匿名的，
malloc分配内存，但是不会为其赋值，然而他确实返回动态内存分配的首字节，
因此可以把该地址赋值给一个指针变量，并使用指针访问该内存，因为char表示1字节，malloc的返回类型
通常被定义为指向char的指针。
c使用一个新的类型：直线void的指针，该类型相当于一个通用指针malloc函数可以用于返回指向数组的指针，
指向结构的指针等，所以通常该函数的返回值会被强制转换为匹配的类型