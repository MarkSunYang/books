https://www.cnblogs.com/gslyyq/p/4508070.html 参考

sizeof 是c语言的一种单目运算，
Sizeof操作符以字节形式给出了其操作数的存储大小。操作数可以是一个表达式或括在括号内的类型名。操作数的存储大小由操作数的类型决定。

用法：
1.用于数据类型
sizeof(type)

2.用于变量
sizeof(var_name),sizeof var_name 都是正确形式

3.sizeof的结果
Sizeof操作符的结果类型是size_t，它在头文件中typedef为unsigned int类型。该类型保证能容纳实现所建立的最大对象的字节大小。（这里指在64位系统）

/*
	printf("int 的长度 %d \n",sizeof(int)); 
	printf("float 的长度 %d \n",sizeof(float)); 
	printf("double 的长度 %d \n",sizeof(double)); 
	printf("char 的长度 %d \n",sizeof(char)); 

    char name[40]="malik";
	printf("int 的长度 %d \n",sizeof(name)); 
*/

sizeof的结果
1.若操作数具有类型 char, unsigned char 或signed char 结果等于1
2.当操作数值指针时，sizeof依赖于编译器
3.当操作数具有数组类型时，其结果是总数组的字节数
int a[10] siezof(a)=40;
4.联合类型操作数的sizeof是其最大字节成员的字节数。


c 语言停工了typedef 关键字，他可以用来为一个类型取新的名字，
typedef unsigned char BYTE;
在这个类型定义后，标识符BYTE可以作为类型 unsigned char的缩写
typedef 仅限于为类型定义符号名称，#define 不仅可以为类型定义别名，也能为数值定义别名，比如您可以定义 1 为 ONE。
typedef 是由编译器执行解释的，#define 语句是由预编译器进行处理的。

-> 是一个整体，他是用于指针指向结构体

struct Data{
	int a,b,c;
};//定义结构体

struct Data *p;//定义结构体指针
struct Data A={1,2,3}; //声明变量A
int x; //声明一个变量x
p=&A; //让指针指向A
x=p->a; //