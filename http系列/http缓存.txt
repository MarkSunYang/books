http报文：

1.http报文是浏览器和服务器之间通信发送的数据模块、
response 和 request
报文信息主要分为两个部分：
1.1.包含属性的头部（Header） 附加信息（cookie，缓存信息）与缓存相关的规则信息
1.2.包含数据的主题部分（Body）Http请求的主体

2.缓存规则解析

我们认为浏览器存在一个缓存数据库,用于存储缓存信息（应是key-value）

第一次请求数据时，此时缓存数据库中没有对应的缓存数据，需要请求服务器，服务器返回后，将数据存储
客户端---> 缓存数据库 
if 没有缓存数据   
    向服务器请求数据
    返回数据和缓存规则
    客户端将数据和缓存规则存入缓存系统

HTTP缓存有多种规则：
根据是否需要向服务器发起请求来分类（强制缓存，对比缓存）

强制缓存：
强制缓存在数据未失效的情况下可以直接用缓存数据，浏览器是如何判断数据是否失效？
缓存规则在header中（Expires/Cache-Control）
Expires的值为服务器返回的到期时间，即下次请求时，请求时间小于服务器端返回的到期时间，
直接使用缓存数据，不过Expires 是HTTP 1.0的东西，现在默认浏览器均默认使用HTTP 1.1，所以它的作用基本忽略。
所以HTTP 1.1 的版本，使用Cache-Control替代。

Cache-Control 是最重要的规则。
常见的取值有private、public、no-cache、max-age，no-store，默认为private。
private 客户端可以缓存
public 客户端和代理服务器都可以缓存
max-age=xxx 缓存的内容将在xxx 秒后失败
no-cache 需要使用对比缓存来验证缓存数据
no-store 所有内容都不会缓存，强制、对比缓存都不会触发

对比缓存：需要进行比较判断是否可以使用缓存
浏览器第一次请求数据时，服务器会将缓存标识和数据一起返回给客户端，客户端将二者备份到缓存数据库中
再次请求数据时，客户端将备份的缓存标识发送给服务器，服务器根据缓存表示来进行判断，判断成功后，返回304
通知客户端比较成功，可以使用缓存数据
第一次返回 200  第二次成功后返回304 第二次的时间会变少
对于对比缓存来说，它在请求header和响应header之间传递
一共分为两种传递标识：
Last——modified  / If-Modified-Since

Last——modified:服务器在响应请求时，告诉浏览器资源的最后修改时间
If-Modified-Since:再次请求服务器时，通过此字段通知服务器上次请求时，服务器返回的资源最后修改时间。
服务器收到请求后发现有头If-Modified-Since 则与被请求资源的最后修改时间进行比对。
若资源的最后修改时间大于If-Modified-Since，说明资源又被改动过，则响应整片资源内容，返回状态码200；
若资源的最后修改时间小于或等于If-Modified-Since，说明资源无新修改，则响应HTTP 304，告知浏览器继续使用所保存的cache。

Etag / If-None-Match（优先级高于Last-Modified  /  If-Modified-Since)
服务器响应请求时，告诉浏览器当前资源在服务器的唯一标识（生成规则由服务器决定）。
第一次请求时，服务器返回资源的唯一标识
再次请求时，通过If-None-Match 的值对比是否相同


参考：https://www.cnblogs.com/chenqf/p/6386163.html

https://segmentfault.com/a/1190000006689795