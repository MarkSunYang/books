1.java中多线程的使用方法，线程同步，线程数据传递、线程状态
2.线程的5个状态 
创建 New 当线程对象创建后，进入新建状态 如：Thred t=new Thread()
就绪 Runnable 当调用线程对象的Star(),线程进入就绪状态，处于就绪状态的线程
运行 Running 当CPU开始调度处于就绪状态的线程，此时线程开始执行，进入到运行状态
阻塞 Blocked 处于运行状态中的线程由于某种原因，暂时放弃对CPU的使用权，停止执行，此时进入阻塞状态，直到其进入到就绪状态，才 有机会再次被CPU调用以进入到运行状态。根据阻塞产生的原因不同，阻塞状态又可以分为三种：
终止
1.等待阻塞：运行状态中的线程执行wait()方法，使本线程进入到等待阻塞状态；
2.同步阻塞 -- 线程在获取synchronized同步锁失败(因为锁被其它线程所占用)，它会进入同步阻塞状态；
3.其他阻塞 -- 通过调用线程的sleep()或join()或发出了I/O请求时，线程会进入到阻塞状态。当sleep()状态超时、join()等待线程终止或者超时、或者I/O处理完毕时，线程重新转入就绪状态。
死亡状态 线程执行完或者因为异常退出了run



3.扩展java.lang.Thread类
继承Thread方法
4.实现 java.lang.Runnable接口




Thread和Runnable的区别
实现Runable接口比继承Thread类具有的优势
1.适合多个相同的程序代码的线程去处理同一个资源
2.可以避免java中单继承限制
3.增加程序的健壮性，代码可以被多个线程共享，
4.线程池只能放实现runnable或callable类线程