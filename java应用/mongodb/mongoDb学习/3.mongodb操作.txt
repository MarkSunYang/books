1.创建数据库
use databasename

2.删除数据库
当前库下执行 db.dropDatabase()  返回：{ "dropped" : "runoob", "ok" : 1 }

3.创建集合
db.createCollection(name,options)  name:要创建的集合名称  options:可选参数，指定内存大小及索引的选项
optoions的参数可以如下
字段 	        类型 	    描述
cap             bool        当该值为 true 时，必须指定 size 参数。  
autoindexid     bool        （可选）如为 true，自动在 _id 字段创建索引。默认为 false。
size            数值        如果 capped 为 true，也需要指定该字段。
max             数值        （可选）指定固定集合中包含文档的最大数量。

在 MongoDB 中，你不需要创建集合。当你插入一些文档时，MongoDB 会自动创建集合。

4.删除集合
db.collection.drop()

5.插入文档
MongoDB中使用insert()或save()方法向文档中插入文档   db.collectionName.insert(document)
如果该集合不在该数据库中， MongoDB 会自动创建该集合并插入文档。

6.更新文档
mongodb使用update和save来更新文档，
1). update方法 更新已存在的文档
db.collection.update(
    <query>,
    <update>,
    {
        upsert: <boolean>,
        multi: <boolean>,
        writeConcern: <document>
    }
)
参数详解：
query  update的查询条件，类似sql update查询的where
update update的对象和一些更新的操作符，也可以理解问sqlupdate内set的后面部分
upsert : 可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。
multi : 可选，mongodb 默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新
writeConcern :可选，抛出异常的级别。

先插入一条数据
db.col.insert({
    "firstName": "sun", "lastName": "mark"
})
接着根据update()方法来更新title
db.col.update({'title':'MongoDB 教程'},{$set:{'title':'MongoDB'}})

7.删除文档
db.collection.remove(
   <query>,
   <justOne>
)
如删除集合下全部文档：
db.inventory.deleteMany({})

8.查询文档
db.collection.find(query, projection)


