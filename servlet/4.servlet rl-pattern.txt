servlet的url-pattern匹配规则

首先需要明确几容易混淆的规则：
1.Servlet 容器的匹配规则既不是简单的通配，也不是正则表达式，而是特定的规则
所以不要用通配符或者正则表达式的匹配规则来看待 servlet的url-pattern
2.一个servlet可以有多个url-pattern，<servlet-mapping>标签声明了与该servlet相应的匹配规则，每个<url-pattern>标签代表1个匹配规则；
3.当servelt容器接收到浏览器发起的一个irl请求，容器会用url减去当前的上下文路径，以剩余的字符串为servlet映射
4.url-pattern映射匹配过程是有优先顺序的
5.而且当有一个servlet匹配成功以后，就不会去理会剩下的servlet了。

四种匹配规则

1.精确匹配
<url-pattern>中配置的项必须与url完全精确匹配。
<servlet-mapping>
    <servlet-name>MyServlet</servlet-name>
    <url-pattern>/user/users.html</url-pattern>
    <url-pattern>/index.html</url-pattern>
    <url-pattern>/user/addUser.action</url-pattern>
</servlet-mapping>
另外上述url后面可以跟任意的查询条件，都会被匹配，如
http://localhost:8080/appDemo/user/addUser?username=Tom&age=23 

2.路径匹配
以 "/"字符开头 并以 "/*"结尾的字符串用于路径匹配
<servlet-mapping>
    <servlet-name>MyServlet</servlet-name>
    <url-pattern>/user/*</url-pattern>
</servlet-mapping>
路径以/user/开始，后面的路径可以任意。比如下面的url都会被匹配。
　　http://localhost:8080/appDemo/user/users.html
　　http://localhost:8080/appDemo/user/addUser.action
　　http://localhost:8080/appDemo/user/updateUser.actionl


3.扩展名匹配
以“*.”开头的字符串被用于扩展名匹配
<servlet-mapping>
    <servlet-name>MyServlet</servlet-name>
    <url-pattern>*.jsp</url-pattern>
    <url-pattern>*.action</url-pattern>
</servlet-mapping>

4.缺省匹配

匹配顺序
精确匹配，servlet-mapping1：<url-pattern>/user/users.html</url-pattern>，servlet-mapping2：<url-pattern>/*</url-pattern>。当一个请求http://localhost:8080/appDemo/user/users.html来的时候，servlet-mapping1匹配到，不再用servlet-mapping2匹配
路径匹配，先最长路径匹配，再最短路径匹配servlet-mapping1：<url-pattern>/user/*</url-pattern>，servlet-mapping2：<url-pattern>/*</url-pattern>。当一个请求http://localhost:8080/appDemo/user/users.html来的时候，servlet-mapping1匹配到，不再用servlet-mapping2匹配
扩展名匹配，servlet-mapping1：<url-pattern>/user/*</url-pattern>，servlet-mapping2：<url-pattern>*.action</url-pattern>。当一个请求http://localhost:8080/appDemo/user/addUser.action来的时候，servlet-mapping1匹配到，不再用servlet-mapping2匹配
缺省匹配，以上都找不到servlet，就用默认的servlet，配置为<url-pattern>/</url-pattern>
