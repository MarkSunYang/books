Vue.js 使用了基于 HTML 的模板语法，允许开发者声明式地将 DOM 绑定至底层 Vue 实例的数据。所有 Vue.js 的模板都是合法的 HTML ，所以能被遵循规范的浏览器和 HTML 解析器解析。

在底层的实现上，Vue 将模板编译成虚拟 DOM 渲染函数。结合响应系统，Vue 能够智能地计算出最少需要重新渲染多少组件，并把 DOM 操作次数减到最少。

如果你熟悉虚拟 DOM 并且偏爱 JavaScript 的原始力量，你也可以不用模板，直接写渲染 (render) 函数，使用可选的 JSX 语法。


插值:
1). 文本
<span>{{msg}}</span>
通过v-once指令，我们也可以执行一次性的插值，当数据改变，插值处的内容不会更新
<span v-once>这个将不会改变:{{msg}}</span>

2). 原始html
v-html 

3).特性
v-bind指令
<div v-bind:id='dynamidId'></div>

4.js 表达式

5). 指令
指令 (Directives) 是带有 v- 前缀的特殊特性。

6).参数
一些指令能够接受一个参数，在指令名称之后冒号表示
<a v-bind:href="url">...</a>















