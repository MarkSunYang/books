为什么会需要消息队列(MQ)？

1.解耦 2.冗余 3.扩展性 4.灵活性 峰值处理能力
5.可恢复性 6. 顺序保证 7.缓冲 8.异步通信

MQ常用的场景：
1.进程通讯和系统之间的消息通知，比如在分布式系统中
2.解耦，一个公司不同的开发部门的模块
3.高并发的场景，mq的异步特性

消息队列和RPC对比

RPC系统
Cusumer <=> Provider
Consumer 调用的Provider提供的服务

MQ系统结构
Sender<=>Queue<=> Receiver
Sender 发送消息 Receiver从Queue拿消息来处理

功能特点
在架构上，RPC和Message Queue的差异点是，Message Queue有一个中间结点Message Queue(broker)，可以把消息存储。

消息队列的特点
Message Queue把请求的压力保存一下，逐渐释放出来，让处理者按照自己的节奏来处理。
Message Queue引入一下新的结点，让系统的可靠性会受Message Queue结点的影响。
Message Queue是异步单向的消息。发送消息设计成是不需要等待消息处理的完成。

RPC的特点
同步调用，对于要等待返回结果/处理结果的场景，RPC是可以非常自然直觉的使用方式。RPC也可以是异步调用。
由于等待结果，Consumer（Client）会有线程消耗。


