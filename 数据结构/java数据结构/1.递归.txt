递归是一种函数调用自己的技术，
学术应用（哈哈，教学里的例子）
计算三角数字，阶乘，生成变位字，执行一个递归的二分查找，汉诺塔问题
归并排序的技术


1 三角数字
1，3，6，10，15，21....
第一位 1=1
第二位 3=2+1
第三位 6=3+2+1
第四项 10=4+3+2+1
...
这个序列中的数字被称为三角数字
                        .
            .           .   .
    .       .   .       .   .   .
.   . .     .   .   .   .   .   .   .
n=1 return 1; return n+ fun(n-1);

1.1 递归方法的特征
1).调用自身
2).当他调用自身的时候，这样做是为了解决更小的问题
3).存在某个足够简单的层次问题，在这一层不需要调用自身就可以直接解答，返回结果
在递归算法每次调用自身的过程中，参数变小，这反映了问题变小或变得简单的事实，当参数到达一定的最小值，将会触发一个条件，此时方法不需要调用自生可以返回

1.2 递归方法有效率吗
调用一个方法会有一定的额外开销，控制必须从这个调用的位置转移到这个方法的开始处，除此之外，传给这个方法的参数以及这个方法返回的地址都要被压入栈的内部
为的是这个方法可以访问参数值和知道返回到哪里
人们常常采用递归，是因为他从概念上简化了问题，而不是因为他本质上更有效率

2.阶乘
阶乘在概念上和三甲数字是类似的，只是用乘法取代了加法而已，
比如5的解阶乘  5!=5*4*3*2*1

3.变位字
比如 cat 全排列会产生
cat cta atc act tac tac
假设有n个字母：
1.全排列最右边的 n-1个字母
2.轮换所有n个字母
3.重复以上步骤n次


