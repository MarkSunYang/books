1.gcc简介
 Linux系统下的gcc（GNU C Compiler）是GNU推出的功能强大、性能优越的多平台编译器


.c为后缀的文件，C语言源代码文件；
.a为后缀的文件，是由目标文件构成的档案库文件；
.C，.cc或.cxx 为后缀的文件，是C++源代码文件；
.h为后缀的文件，是程序所包含的头文件；
.i 为后缀的文件，是已经预处理过的C源代码文件；
.ii为后缀的文件，是已经预处理过的C++源代码文件；
.m为后缀的文件，是Objective-C源代码文件；
.o为后缀的文件，是编译后的目标文件；
.s为后缀的文件，是汇编语言源代码文件；
.S为后缀的文件，是经过预编译的汇编语言源代码文件。

gcc是c语言的编译器，gcc编译c语言的四个相关步骤：
预处理（预编译 Preprocessing）
编译（Compilation）
汇编（Assembly）
连接（Linking）
1).命令gcc首先调用cpp进行预处理，在预处理过程中，对源代码文件中的文件包含(include)、预编译语句(如宏定义define等)进行分析
2).接着调用cc1进行编译，这个阶段根据输入文件生成以.o为后缀的目标文件。

gcc的相关用法和选项

基本用法 gcc[options][filename]
options 是编译器所需要的参数，filenames给出相关的文件名称

-c 只编译，不连接成为可执行文件
-o output 
确定输出文件的名称为output_filename，同时这个名称不能和源文件同名。如果不给出这个选项，gcc就给出预设的可执行文件a.out。
比如源文件是 hello.c  那么编译命令是 gcc hello.c 那么生成 a.out
如果 编译命令是 gcc hello.c -o hello 那么生成 hello 文件
运行hello 就是程序的输出


