lvaue和rvalue

1.1 lvaue（左值）
lvalue指代一个函数或对象(注意c语言中的对象概念)，
 .E是指针，则 *E 是value
 .一个函数的返回值是左值引用，返回是lvalue，如 int&foo();

1.2 xvalue(exoiring value 临终值)
xvalue指代一个对象，但是和lvaue不一样，这个对象即将消亡，
 .一个函数的返回值是右值引用，返回值是xvalue，int&&foo()

1.3 gvalue(generalized lvalue，泛左值)
1.4 rvalue(右值)
1.5. prvalue（pure rvalue，纯右值）


c 定义：
左值是一个表达式，它可能出现在赋值操作的左边或者右边，但右值只能出现在右边
a * b = 42; // 编译错误， 说明 a * b 不是左值
左值是一个表达式，他表示一个可被表示的内存位置，并且允许使用&操作符来获取内存的的地址。
如果一个表达式不是右值，就可以被定义为左值
int i=42;
i=43;
int* p=&i;//i是左值

const char *pc="behold a string literal";
程序根据声明把相应的字符串字面量存储在内存中，内含这些字符的数组是一个对象
由于数组中的每个字符都能够被单独访问，所以每个字符也是一个对象，该声明还创建了一个标识符为pc的对象
存储字符串的地址，由于可以设置pc重新指向其他的字符串，
